/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* SET A BASIC RESET - PREVENT BROWSERS FROM INTERFERING */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* SET UP THE BASIC UNIVERSAL SETTINGS FOR OUR PAGE */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh; /* vh = viewport height (this is 95% of the max vh */
    /* to add the green filter over backgroundimage: gradient, img */
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 133, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover; /* will always try to fit the element in the viewport */
    background-position: top;
    position: relative; /* origin for positioning other elements */

    /* CREATING POLYGON SHAPE */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px; /* width auto calculated by browser */
}

.text-box {
    position: absolute;
    top: 40%; /* top + left in relation to parent element */
    left: 50%;
    transform: translate(-50%, -50%); /* relates to element itself */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    margin-bottom: 60px;

    backface-visibility: hidden; /* determines if the back part of an element is visible during animation - fixes animation shaking*/
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}
    /* ANIMATION CODE - HEADER TEXT - can be used again across code*/
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px)
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px)
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited { /* :link/:visited = psuedo class */
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s; /* short hand - elements time */
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 10px rgba(0,0,0,0.2); /* gives button 3d feeling */
}

.btn:active {
    transform: translateY(-1px);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%; /* 100% of the button element */
    border-radius: 100px;
    position: absolute; 
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after { /* after psuedo element only in the hover state */
    transform: scaleX(1.4) scaleY(1.6); /* scale increases the element */
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /* sets the element to the 0% state of animation before the animation begins */
}
